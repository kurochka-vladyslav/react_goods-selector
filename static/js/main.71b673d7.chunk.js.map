{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","buttonClick","item","includes","setState","filter","e","clearGoods","this","title","length","slice","join","className","type","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,aAAc,CAAC,Q,EAGjBC,YAAc,SAACC,GACb,IAAQF,EAAiB,EAAKD,MAAtBC,aAEJA,EAAaG,SAASD,GACxB,EAAKE,SAAS,CAAEJ,aAAcA,EAAaK,QAAO,SAAAC,GAAC,OAAIA,IAAMJ,OAE7D,EAAKE,SAAS,CAAEJ,aAAa,GAAD,mBAAMA,GAAN,CAAoBE,O,EAIpDK,WAAa,WACX,EAAKH,SAAS,CACZJ,aAAc,M,4CAIlB,WAAU,IAAD,OACCA,EAAiBQ,KAAKT,MAAtBC,aACJS,EAAQ,GAEZ,OAAQT,EAAaU,QACnB,KAAK,EACHD,EAAQ,oBACR,MACF,KAAK,EACHA,EAAK,UAAMT,EAAN,gBACL,MAEF,KAAK,EACHS,EAAK,UAAMT,EAAa,GAAnB,gBAA6BA,EAAa,GAA1C,iBACL,MACF,QACES,EAAK,UAAMT,EAAaW,MAAM,EAAGX,EAAaU,OAAS,GAAGE,KAAK,KAA1D,gBAAsEZ,EAAaA,EAAaU,OAAS,GAAzG,iBAGT,OACE,sBAAKG,UAAU,MAAf,UACE,6BAAKJ,IACL,qBAAKI,UAAU,uBAAf,SACGb,EAAaU,OAAS,EAEnB,wBACEG,UAAU,eACVC,KAAK,SACLC,QAASP,KAAKD,WAHhB,mBAQA,KAEN,6BACGV,EAAgBmB,KAAI,SAACd,GAAD,OACnB,sBACEW,UAAWb,EAAaG,SAASD,GAC7B,gBACA,OAHN,UAME,6BACGA,IAEH,wBACEY,KAAK,SACLC,QAAS,kBAAM,EAAKd,YAAYC,IAChCW,UAAWb,EAAaG,SAASD,GAC7B,wBACA,eALN,SAOGF,EAAaG,SAASD,GAAQ,SAAW,aAZvCA,e,GA9DDe,IAAMC,WAoFTpB,ICrGfqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.71b673d7.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  buttonClick = (item: string) => {\n    const { selectedGood } = this.state;\n\n    if (selectedGood.includes(item)) {\n      this.setState({ selectedGood: selectedGood.filter(e => e !== item) });\n    } else {\n      this.setState({ selectedGood: [...selectedGood, item] });\n    }\n  };\n\n  clearGoods = () => {\n    this.setState({\n      selectedGood: [],\n    });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n    let title = '';\n\n    switch (selectedGood.length) {\n      case 0:\n        title = 'No goods selected';\n        break;\n      case 1:\n        title = `${selectedGood} is selected`;\n        break;\n\n      case 2:\n        title = `${selectedGood[0]} and ${selectedGood[1]} are selected`;\n        break;\n      default:\n        title = `${selectedGood.slice(0, selectedGood.length - 1).join(',')} and ${selectedGood[selectedGood.length - 1]} are selected`;\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>{title}</h1>\n        <div className=\"clear-button-wrapper\">\n          {selectedGood.length > 0\n            ? (\n              <button\n                className=\"clear-button\"\n                type=\"button\"\n                onClick={this.clearGoods}\n              >\n                Clear\n              </button>\n            )\n            : ''}\n        </div>\n        <ul>\n          {goodsFromServer.map((item) => (\n            <div\n              className={selectedGood.includes(item)\n                ? 'item selected'\n                : 'item'}\n              key={item}\n            >\n              <li>\n                {item}\n              </li>\n              <button\n                type=\"button\"\n                onClick={() => this.buttonClick(item)}\n                className={selectedGood.includes(item)\n                  ? 'item__button-selected'\n                  : 'item__button'}\n              >\n                {selectedGood.includes(item) ? 'Remove' : 'Select'}\n              </button>\n            </div>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}