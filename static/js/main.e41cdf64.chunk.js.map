{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","buttonClick","item","includes","setState","filter","e","clearGoods","this","className","length","slice","join","at","title","type","onClick","map","selectedGoods","classNames","selected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,aAAc,CAAC,Q,EAGjBC,YAAc,SAACC,GACY,EAAKH,MAAtBC,aAESG,SAASD,GACxB,EAAKE,UAAS,SAAAL,GAAK,MAAK,CACtBC,aAAcD,EAAMC,aAAaK,QAAO,SAAAC,GAAC,OAAIA,IAAMJ,SAGrD,EAAKE,UAAS,SAAAL,GAAK,MAAK,CAAEC,aAAa,GAAD,mBAAMD,EAAMC,cAAZ,CAA0BE,S,EAIpEK,WAAa,WACX,EAAKH,SAAS,CACZJ,aAAc,M,4CAIlB,WAAU,IAAD,OACCA,EAAiBQ,KAAKT,MAAtBC,aAcR,OACE,sBAAKS,UAAU,MAAf,UACE,6BAdU,WACZ,OAAQT,EAAaU,QACnB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUV,EAAV,gBAEF,QACE,MAAM,GAAN,OAAUA,EAAaW,MAAM,EAAGX,EAAaU,OAAS,GAAGE,KAAK,KAA9D,gBAA0EZ,EAAaa,IAAI,GAA3F,kBAMGC,KACL,qBAAKL,UAAU,uBAAf,SACIT,EAAaU,OAAS,GAEpB,wBACED,UAAU,eACVM,KAAK,SACLC,QAASR,KAAKD,WAHhB,qBASN,6BACGV,EAAgBoB,KAAI,SAACf,GACpB,IAAMgB,EAAgBlB,EAAaG,SAASD,GAE5C,OACE,qBACEO,UAAWU,IACT,OACA,CAAEC,SAAUF,IAHhB,UAOGhB,EACD,wBACEa,KAAK,SACLC,QAAS,kBAAM,EAAKf,YAAYC,IAChCO,UAAWU,IACT,eACA,CAAE,wBAAyBD,IAL/B,SAQGA,EAAgB,SAAW,aAXzBhB,e,GA/DHmB,IAAMC,WAqFTxB,ICvGfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e41cdf64.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  buttonClick = (item: string) => {\n    const { selectedGood } = this.state;\n\n    if (selectedGood.includes(item)) {\n      this.setState(state => ({\n        selectedGood: state.selectedGood.filter(e => e !== item),\n      }));\n    } else {\n      this.setState(state => ({ selectedGood: [...state.selectedGood, item] }));\n    }\n  };\n\n  clearGoods = () => {\n    this.setState({\n      selectedGood: [],\n    });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    const title = () => {\n      switch (selectedGood.length) {\n        case 0:\n          return 'No goods selected';\n        case 1:\n          return `${selectedGood} is selected`;\n\n        default:\n          return `${selectedGood.slice(0, selectedGood.length - 1).join(',')} and ${selectedGood.at(-1)} are selected`;\n      }\n    };\n\n    return (\n      <div className=\"App\">\n        <h1>{title()}</h1>\n        <div className=\"clear-button-wrapper\">\n          {(selectedGood.length > 0)\n            && (\n              <button\n                className=\"clear-button\"\n                type=\"button\"\n                onClick={this.clearGoods}\n              >\n                Clear\n              </button>\n            )}\n        </div>\n        <ul>\n          {goodsFromServer.map((item) => {\n            const selectedGoods = selectedGood.includes(item);\n\n            return (\n              <li\n                className={classNames(\n                  'item',\n                  { selected: selectedGoods },\n                )}\n                key={item}\n              >\n                {item}\n                <button\n                  type=\"button\"\n                  onClick={() => this.buttonClick(item)}\n                  className={classNames(\n                    'item__button',\n                    { 'item__button-selected': selectedGoods },\n                  )}\n                >\n                  {selectedGoods ? 'Remove' : 'Select'}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}